{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/Form/Form.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","cn","completed","title","TodoList","todos","map","Form","users","onAdd","useState","setTitle","isTitleError","setIsTitleError","userId","setUserId","isUserError","setIsUserError","action","method","onSubmit","event","preventDefault","type","value","onChange","target","placeholder","disabled","getUserById","usersFromServer","find","getNewTodoId","Math","max","prepareTodos","App","setTodos","newTodo","current","ReactDOM","render","document","getElementById"],"mappings":"qNAAe,GACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2B,uBCrDEC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OACE,mBAAGC,UAAU,WAAWC,KAAI,wBAAYF,QAAZ,IAAYA,OAAZ,EAAYA,EAAMF,OAA9C,gBACGE,QADH,IACGA,OADH,EACGA,EAAMJ,QCDAO,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,mCACE,0BAEE,UAASA,EAAKT,GACdM,UAAWI,IAAG,WACZ,CAAE,sBAAuBD,EAAKE,YAJlC,UAME,oBAAIL,UAAU,kBAAd,SACGG,EAAKG,QAGR,cAAC,EAAD,CAAUP,KAAMI,EAAKJ,SAThBI,EAAKT,OCHHa,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAASR,UAAU,WAAnB,SAEIQ,EAAMC,KAAI,SAAAN,GAAI,OAAI,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKT,UCJjCgB,EAAwB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC7C,EAA0BC,mBAAS,IAAnC,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAAwCD,oBAAS,GAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAEA,EAA4BH,mBAAS,GAArC,mBAAOI,EAAP,KAAeC,EAAf,KACA,EAAsCL,oBAAS,GAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KA8BA,OACE,uBAAMC,OAAO,aAAaC,OAAO,OAAOC,SAxBnB,SAACC,GACtBA,EAAMC,iBACNT,GAAiBV,GACjBc,GAAgBH,GAEXX,GAAUW,IAIfL,EAAMN,EAAOW,GAbbH,EAAS,IACTI,EAAU,KA2BV,UACE,sBAAKlB,UAAU,QAAf,UACE,uBACE0B,KAAK,OACL,UAAQ,aACRC,MAAOrB,EACPsB,SAjBkB,SAACJ,GACzBV,EAASU,EAAMK,OAAOF,OACtBX,GAAgB,IAgBVc,YAAY,kBAEbf,GACC,sBAAMf,UAAU,QAAhB,qCAIJ,sBAAKA,UAAU,QAAf,UACE,yBACE,UAAQ,aACRL,KAAK,aACLgC,MAAOV,EACPW,SAzBiB,SAACJ,GACxBN,GAAWM,EAAMK,OAAOF,OACxBP,GAAe,IAmBX,UAME,wBACEO,MAAM,IACNI,UAAQ,EAFV,2BAMCpB,EAAMF,KAAI,SAAAV,GAAI,OACb,wBAAsB4B,MAAO5B,EAAKL,GAAlC,SAAuCK,EAAKJ,MAA/BI,EAAKL,UAIrByB,GACK,sBAAMnB,UAAU,QAAhB,qCAGR,wBAAQ0B,KAAK,SAAS,UAAQ,eAA9B,qBCtEN,SAASM,EAAYf,GACnB,OAAOgB,EAAgBC,MAAK,SAAAnC,GAAI,OAAIA,EAAKL,KAAOuB,MAAW,KAG7D,SAASkB,EAAa3B,GAKpB,OAJc4B,KAAKC,IAAL,MAAAD,KAAI,YACb5B,EAAMC,KAAI,SAAAN,GAAI,OAAIA,EAAKT,QAGb,EAGjB,IAAM4C,ECtBS,CACb,CACE5C,GAAI,EACJY,MAAO,qBACPD,WAAW,EACXY,OAAQ,GAEV,CACEvB,GAAI,GACJY,MAAO,kBACPD,WAAW,EACXY,OAAQ,GAEV,CACEvB,GAAI,EACJY,MAAO,qCACPD,WAAW,EACXY,OAAQ,IDKiCR,KAAI,SAAAN,GAAI,kCAChDA,GADgD,IAEnDJ,KAAMiC,EAAY7B,EAAKc,aAGZsB,EAAM,WACjB,MAA0B1B,mBAASyB,GAAnC,mBAAO9B,EAAP,KAAcgC,EAAd,KAcA,OACE,sBAAKxC,UAAU,MAAf,UACE,+CACA,cAAC,EAAD,CAAMY,MAfI,SAACN,EAAeW,GAC5B,IAAMwB,EAAU,CACd/C,GAAIyC,EAAa3B,GACjBF,QACAD,WAAW,EACXY,SACAlB,KAAMiC,EAAYf,IAGpBuB,GAAS,SAAAE,GAAO,4BAAQA,GAAR,CAAiBD,QAMX9B,MAAOsB,IAC3B,cAAC,EAAD,CAAUzB,MAAOA,QE3CvBmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e097b5e2.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../type/User';\n\ninterface Props {\n  user: User | null;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../type/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <>\n    <article\n      key={todo.id}\n      data-id={todo.id}\n      className={cn('TodoInfo',\n        { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n  </>\n);\n","import React from 'react';\nimport { Todo } from '../../type/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)\n      }\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport { User } from '../../type/User';\n\ninterface Props {\n  users: User[];\n  onAdd: (title: string, userId: number) => void;\n}\n\nexport const Form: React.FC<Props> = ({ users, onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [isTitleError, setIsTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [isUserError, setIsUserError] = useState(false);\n\n  const clearForm = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleOnSumbit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setIsTitleError(!title);\n    setIsUserError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onAdd(title, userId);\n    clearForm();\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setIsUserError(false);\n  };\n\n  return (\n    <form action=\"/api/todos\" method=\"POST\" onSubmit={handleOnSumbit}>\n      <div className=\"field\">\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={title}\n          onChange={handleTitleChange}\n          placeholder=\"Enter a title\"\n        />\n        {isTitleError && (\n          <span className=\"error\">Please enter a title</span>)}\n\n      </div>\n\n      <div className=\"field\">\n        <select\n          data-cy=\"userSelect\"\n          name=\"userSelect\"\n          value={userId}\n          onChange={handleUserChange}\n        >\n          <option\n            value=\"0\"\n            disabled\n          >\n            Choose a user\n          </option>\n          {users.map(user => (\n            <option key={user.id} value={user.id}>{user.name}</option>\n          ))}\n        </select>\n\n        {isUserError\n          && (<span className=\"error\">Please choose a user</span>)}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { User } from './type/User';\nimport { Todo } from './type/Todo';\nimport { TodoList } from './components/TodoList';\nimport { Form } from './components/Form/Form';\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(\n    ...todos.map(todo => todo.id),\n  );\n\n  return maxId + 1;\n}\n\nconst prepareTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(prepareTodos);\n\n  const onAdd = (title: string, userId: number) => {\n    const newTodo = {\n      id: getNewTodoId(todos),\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    };\n\n    setTodos(current => [...current, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <Form onAdd={onAdd} users={usersFromServer} />\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}